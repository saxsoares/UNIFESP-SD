/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _SERVER_CENT_H_RPCGEN
#define _SERVER_CENT_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct request_in {
	long pid_c;
	long tempo_c;
};
typedef struct request_in request_in;

struct release {
	long pid_c;
	long tempo_c;
	long recurso_n;
};
typedef struct release release;

struct reply_out {
	long pid_c;
	long tempo_s;
	long recurso;
};
typedef struct reply_out reply_out;

#define SERVER_CENT 0x1101
#define SC_V 1

#if defined(__STDC__) || defined(__cplusplus)
#define REQ 1
extern  reply_out * req_1(request_in *, CLIENT *);
extern  reply_out * req_1_svc(request_in *, struct svc_req *);
#define REL 2
extern  int * rel_1(release *, CLIENT *);
extern  int * rel_1_svc(release *, struct svc_req *);
extern int server_cent_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define REQ 1
extern  reply_out * req_1();
extern  reply_out * req_1_svc();
#define REL 2
extern  int * rel_1();
extern  int * rel_1_svc();
extern int server_cent_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_request_in (XDR *, request_in*);
extern  bool_t xdr_release (XDR *, release*);
extern  bool_t xdr_reply_out (XDR *, reply_out*);

#else /* K&R C */
extern bool_t xdr_request_in ();
extern bool_t xdr_release ();
extern bool_t xdr_reply_out ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_SERVER_CENT_H_RPCGEN */
